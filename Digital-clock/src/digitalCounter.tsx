import * as React from "react";
import { useTransition, animated, config } from "react-spring";

export default function DigitalCounter({ counter }: { counter: number }) {
  const transitions = useTransition([...numbers[counter]], null, {
    config: config.gentle,
    from: { transform: `rotate3d(1,0.4,0,60deg) `, opacity: 0 },
    enter: { transform: `rotate3d(0,0.4,0,0deg) `, opacity: 1 },
    leave: { transform: `rotate3d(-1,0.4,0,60deg) `, opacity: 0 }
  });

  return (
    <svg width="100%" height="100%" viewBox="0 0 2000 4000" fill="none">
      {transitions.map(({ item, key, props }) => (
        <animated.path
          key={key}
          d={paths[item]}
          style={{ ...props }}
          fill="#ffffff"
        />
      ))}
    </svg>
  );
}

const numbers = [
  [0, 1, 2, 4, 5, 6],
  [2, 5],
  [0, 2, 3, 4, 6],
  [0, 2, 3, 5, 6],
  [1, 2, 3, 5],
  [0, 1, 3, 5, 6],
  [0, 1, 3, 4, 5, 6],
  [0, 2, 5],
  [0, 1, 2, 3, 4, 5, 6],
  [0, 1, 2, 3, 5]
];

const paths = [
  "M267.284 226C261.98 226 256.893 223.893 253.142 220.142L160.142 127.142C152.332 119.332 152.332 106.668 160.142 98.8578L253.142 5.85781C256.893 2.10709 261.98 -5.06661e-05 267.284 -5.05777e-05L1261.72 -3.40108e-05C1267.02 -3.39225e-05 1272.11 2.1071 1275.86 5.85783L1368.86 98.8578C1376.67 106.668 1376.67 119.332 1368.86 127.142L1275.86 220.142C1272.11 223.893 1267.02 226 1261.72 226L267.284 226Z",
  "M4.38301e-05 347.285C4.4062e-05 341.98 2.10718 336.893 5.85791 333.142L98.8579 240.142C106.668 232.332 119.332 232.332 127.142 240.142L220.142 333.142C223.893 336.893 226 341.98 226 347.285L226 1341.72C226 1347.02 223.893 1352.11 220.142 1355.86L127.142 1448.86C119.332 1456.67 106.668 1456.67 98.8579 1448.86L5.85787 1355.86C2.10714 1352.11 1.30257e-07 1347.02 3.62117e-07 1341.72L4.38301e-05 347.285Z",
  "M1293 347.285C1293 341.98 1295.11 336.893 1298.86 333.142L1391.86 240.142C1399.67 232.332 1412.33 232.332 1420.14 240.142L1513.14 333.142C1516.89 336.893 1519 341.98 1519 347.285L1519 1341.72C1519 1347.02 1516.89 1352.11 1513.14 1355.86L1420.14 1448.86C1412.33 1456.67 1399.67 1456.67 1391.86 1448.86L1298.86 1355.86C1295.11 1352.11 1293 1347.02 1293 1341.72L1293 347.285Z",
  "M267.284 1692C261.98 1692 256.893 1689.89 253.142 1686.14L160.142 1593.14C152.332 1585.33 152.332 1572.67 160.142 1564.86L253.142 1471.86C256.893 1468.11 261.98 1466 267.284 1466L1261.72 1466C1267.02 1466 1272.11 1468.11 1275.86 1471.86L1368.86 1564.86C1376.67 1572.67 1376.67 1585.33 1368.86 1593.14L1275.86 1686.14C1272.11 1689.89 1267.02 1692 1261.72 1692L267.284 1692Z",
  "M4.38301e-05 1816.28C4.4062e-05 1810.98 2.10718 1805.89 5.85791 1802.14L98.8579 1709.14C106.668 1701.33 119.332 1701.33 127.142 1709.14L220.142 1802.14C223.893 1805.89 226 1810.98 226 1816.28L226 2810.72C226 2816.02 223.893 2821.11 220.142 2824.86L127.142 2917.86C119.332 2925.67 106.668 2925.67 98.8579 2917.86L5.85787 2824.86C2.10714 2821.11 1.30257e-07 2816.02 3.62117e-07 2810.72L4.38301e-05 1816.28Z",
  "M1293 1816.28C1293 1810.98 1295.11 1805.89 1298.86 1802.14L1391.86 1709.14C1399.67 1701.33 1412.33 1701.33 1420.14 1709.14L1513.14 1802.14C1516.89 1805.89 1519 1810.98 1519 1816.28L1519 2810.72C1519 2816.02 1516.89 2821.11 1513.14 2824.86L1420.14 2917.86C1412.33 2925.67 1399.67 2925.67 1391.86 2917.86L1298.86 2824.86C1295.11 2821.11 1293 2816.02 1293 2810.72L1293 1816.28Z",
  "M267.284 3157C261.98 3157 256.893 3154.89 253.142 3151.14L160.142 3058.14C152.332 3050.33 152.332 3037.67 160.142 3029.86L253.142 2936.86C256.893 2933.11 261.98 2931 267.284 2931L1261.72 2931C1267.02 2931 1272.11 2933.11 1275.86 2936.86L1368.86 3029.86C1376.67 3037.67 1376.67 3050.33 1368.86 3058.14L1275.86 3151.14C1272.11 3154.89 1267.02 3157 1261.72 3157L267.284 3157Z"
];
